// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  password  String
  role      UserRole @default(PARTICIPANT)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Campos de perfil expandido
  profileImage String?   // URL da foto de perfil
  bannerImage  String?   // URL da imagem de banner do perfil
  bio          String?   // Biografia do usuário (máx 500 caracteres)
  location     String?   // Localização/cidade onde reside
  phone        String?   // Número de telefone
  website      String?   // Website pessoal
  
  // Redes sociais e contatos
  linkedin     String?   // URL do LinkedIn
  instagram    String?   // URL do Instagram
  twitter      String?   // URL do Twitter

  // Eventos criados pelo usuário (se for organizador)
  createdEvents Event[]

  // Inscrições em eventos (se for participante)
  registrations EventRegistration[]

  @@map("users")
}

model Event {
  id          String   @id @default(cuid())
  title       String
  description String?
  location    String
  startDate   DateTime
  endDate     DateTime?
  maxAttendees Int?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Organizador do evento
  organizerId String
  organizer   User   @relation(fields: [organizerId], references: [id], onDelete: Cascade)

  // Inscrições no evento
  registrations EventRegistration[]

  @@map("events")
}

model EventRegistration {
  id           String            @id @default(cuid())
  status       RegistrationStatus @default(CONFIRMED)
  registeredAt DateTime          @default(now())

  // Usuário inscrito
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  // Evento
  eventId String
  event   Event  @relation(fields: [eventId], references: [id], onDelete: Cascade)

  @@unique([userId, eventId])
  @@map("event_registrations")
}

enum UserRole {
  ORGANIZER
  PARTICIPANT
}

enum RegistrationStatus {
  PENDING
  CONFIRMED
  CANCELLED
}
